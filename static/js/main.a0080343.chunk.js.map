{"version":3,"sources":["common/components/consts.ts","common/components/Loading/index.tsx","const.ts","store/reducers/consts.ts","store/actions/setActions.ts","store/actions/addActions.ts","common/components/CategoryList/index.tsx","common/components/Button/index.tsx","common/components/Radio/index.tsx","common/components/Svg/SvgIcon.tsx","common/components/Svg/LikeIcon.tsx","helpers/toDate.ts","common/components/Card/index.tsx","store/actions/favoriteActions.ts","pages/index.tsx","App.tsx","store/reducers/common/jokesReducer.ts","store/reducer.tsx","index.tsx"],"names":["CATEGORY_TYPE","Loading","loaderItem","Array","from","length","_","idx","className","map","item","ACTIVE_TYPE","API","setRandomTypeAction","typeJoke","type","SET_TYPE","addJokeAction","data","ADD_JOKE","CategoryList","dispatch","useDispatch","useSelector","state","jokes","handleQuery","SEARCH","axios","get","value","then","response","ADD_JOKES","addJokesAction","result","CATEGORY","jokeCategory","useEffect","categories","SET_CATEGORIES","htmlFor","id","onChange","RANDOM","checked","classNames","onClick","SET_JOKE_CATEGORY","placeholder","e","target","SET_VALUE","isDisabled","Button","children","disabled","Radio","SvgIcon","width","height","viewBox","fill","xmlns","LikeIcon","isLike","d","toDate","date","newDate","Date","getDate","getMonth","getFullYear","Card","url","icon_url","updated_at","liked","handleOnClick","jokeId","UNLIKED","unlikedJokeAction","LIKED","likedJokeAction","src","alt","href","rel","IndexPage","created_at","favoriteList","App","jokesReducer","action","u","find","x","filter","reducers","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a0080343.chunk.js","sourcesContent":["export enum CATEGORY_TYPE {\n    RANDOM = 'RANDOM',\n    CATEGORY = 'CATEGORY',\n    SEARCH = 'SEARCH',\n}\n","import React from 'react';\n\nconst Loading: React.FunctionComponent = () => {\n    const loaderItem = Array.from({ length: 10 }, (_, idx) => idx);\n\n    return (\n        <div className=\"loader\">\n            <div className=\"loader__wrap\">\n                {loaderItem.map(item => (\n                    <div key={item} className=\"loader__item\" />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Loading;\n","export const API = 'https://api.chucknorris.io/jokes/';\n","export enum ACTIVE_TYPE {\n    SET_TYPE = 'SET_TYPE',\n    SET_CATEGORIES = 'SET_CATEGORIES',\n    SET_JOKE_CATEGORY = 'SET_JOKE_CATEGORY',\n    SET_VALUE = 'SET_VALUE',\n    ADD_JOKE = 'ADD_JOKE',\n    ADD_JOKES = 'ADD_JOKES',\n    LIKED = 'LIKED',\n    UNLIKED = 'UNLIKED',\n}\n","import { ACTIVE_TYPE } from '../reducers/consts';\n\nexport const setCategoriesAction = (categories: []) => ({ type: ACTIVE_TYPE.SET_CATEGORIES, categories });\nexport const setJokeCategoryAction = (jokeCategory: string) => ({ type: ACTIVE_TYPE.SET_JOKE_CATEGORY, jokeCategory });\nexport const setValueAction = (value: string) => ({ type: ACTIVE_TYPE.SET_VALUE, value });\nexport const setRandomTypeAction = (typeJoke: string) => ({ type: ACTIVE_TYPE.SET_TYPE, typeJoke });\n","import { ACTIVE_TYPE } from '../reducers/consts';\n\nexport const addJokeAction = (data: any) => ({ type: ACTIVE_TYPE.ADD_JOKE, data });\nexport const addJokesAction = (data: any) => ({ type: ACTIVE_TYPE.ADD_JOKES, data });\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport classNames from 'classnames';\n\nimport { Button, Radio } from '../';\n\nimport { CATEGORY_TYPE } from '../consts';\nimport { API } from '../../../const';\nimport { StateTypes } from '../../../types';\n\nimport {\n    setCategoriesAction,\n    setRandomTypeAction,\n    setJokeCategoryAction,\n    setValueAction,\n    addJokeAction,\n    addJokesAction,\n} from '../../../store/actions';\n\nconst CategoryList: React.FC = () => {\n    const dispatch = useDispatch();\n\n    const data = useSelector((state: StateTypes) => state.jokes);\n\n    const getCategories = (): void => {\n        axios.get(`${API}categories`).then(response => {\n            dispatch(setCategoriesAction(response.data));\n        });\n    };\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        dispatch(setValueAction(e.target.value));\n    };\n\n    const handleQuery = () => {\n        switch (data.typeJoke) {\n            case CATEGORY_TYPE.SEARCH:\n                return axios.get(`${API}search?query=${data.value}`).then(response => {\n                    dispatch(addJokesAction(response.data.result));\n                });\n            case CATEGORY_TYPE.CATEGORY:\n                return axios.get(`${API}random?category=${data.jokeCategory}`).then(response => {\n                    dispatch(addJokeAction(response.data));\n                });\n            default:\n                return axios.get(`${API}random`).then(response => {\n                    dispatch(addJokeAction(response.data));\n                });\n        }\n    };\n\n    const isDisabled = () =>\n        (data.typeJoke === CATEGORY_TYPE.SEARCH && !data.value.length) ||\n        (data.typeJoke === CATEGORY_TYPE.CATEGORY && !data.jokeCategory.length);\n\n    useEffect(getCategories, []);\n\n    return (\n        <div className=\"category-list\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-for */}\n            <label htmlFor=\"random\" className=\"category-list__label\">\n                <Radio\n                    id=\"random\"\n                    onChange={() => dispatch(setRandomTypeAction(CATEGORY_TYPE.RANDOM))}\n                    checked={data.typeJoke === CATEGORY_TYPE.RANDOM}\n                />\n                Random\n            </label>\n            {/* eslint-disable-next-line jsx-a11y/label-has-for */}\n            <label htmlFor=\"category\" className=\"category-list__label\">\n                <Radio\n                    id=\"category\"\n                    onChange={() => dispatch(setRandomTypeAction(CATEGORY_TYPE.CATEGORY))}\n                    checked={data.typeJoke === CATEGORY_TYPE.CATEGORY}\n                />\n                From categories\n            </label>\n            {data.typeJoke === CATEGORY_TYPE.CATEGORY && (\n                <div className=\"category-buttons\">\n                    {data.categories.map(item => (\n                        <Button\n                            key={item}\n                            className={classNames('category-buttons__item', {\n                                'category-buttons__item--active': data.jokeCategory === item,\n                            })}\n                            onClick={() => {\n                                dispatch(setJokeCategoryAction(item));\n                            }}\n                        >\n                            {item}\n                        </Button>\n                    ))}\n                </div>\n            )}\n            {/* eslint-disable-next-line jsx-a11y/label-has-for */}\n            <label htmlFor=\"search\" className=\"category-list__label\">\n                <Radio\n                    id=\"search\"\n                    onChange={() => dispatch(setRandomTypeAction(CATEGORY_TYPE.SEARCH))}\n                    checked={data.typeJoke === CATEGORY_TYPE.SEARCH}\n                />\n                Search\n            </label>\n            {data.typeJoke === CATEGORY_TYPE.SEARCH && (\n                <div className=\"category-list__input-wrap\">\n                    <input\n                        className=\"category-list__input\"\n                        placeholder=\"Free text search...\"\n                        type=\"text\"\n                        onChange={onChange}\n                        value={data.value}\n                    />\n                </div>\n            )}\n            <div>\n                <Button\n                    isDisabled={isDisabled()}\n                    className=\"category-list__button\"\n                    onClick={() => {\n                        handleQuery();\n                    }}\n                >\n                    Get a joke\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default CategoryList;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\ntype ButtonOptionalPropsType = {\n    className?: string;\n    isDisabled?: boolean;\n    children?: React.ReactNode;\n    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n};\n\nconst Button: React.FunctionComponent<ButtonOptionalPropsType> = ({\n    onClick,\n    className = '',\n    children = null,\n    isDisabled = false,\n}) => (\n    <button\n        type=\"button\"\n        onClick={onClick}\n        disabled={isDisabled}\n        className={classNames(`button ${className}`, {\n            'button--disabled': isDisabled,\n        })}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype RadioPropsType = {\n    id?: string;\n    checked?: boolean;\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: React.FC<RadioPropsType> = ({ id = '', checked = false, onChange }) => (\n    <div className={classNames('radio', { 'radio--active': checked })}>\n        <input className=\"radio__control\" type=\"radio\" id={id} checked={checked} onChange={onChange} />\n        <span className=\"radio__background\" />\n    </div>\n);\n\nexport default Radio;\n","import * as React from 'react';\n\ntype SvgIconOptionalPropsType = {\n    width: string;\n    height: string;\n    className: string;\n    children: React.ReactNode;\n    viewBox: string;\n    fill?: string;\n};\n\ntype SvgIconPropsType = Partial<SvgIconOptionalPropsType>;\n\nconst SvgIcon: React.FC<SvgIconPropsType> = ({\n    width = '100%',\n    height = '100%',\n    children = null,\n    className = '',\n    viewBox = '',\n    fill = 'transparent',\n}) => (\n    <svg\n        className={className}\n        width={width}\n        height={height}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox={viewBox}\n        fill={fill}\n    >\n        {children}\n    </svg>\n);\n\nexport default SvgIcon;\n","import * as React from 'react';\nimport SvgIcon from './SvgIcon';\n\ntype LikeIconOptionalPropsType = {\n    className: string;\n    isLike?: boolean;\n    width?: string;\n    height?: string;\n    viewBox?: string;\n    fill?: string;\n};\n\ntype ExpertIconPropsType = Partial<LikeIconOptionalPropsType>;\n\nconst LikeIcon: React.FC<ExpertIconPropsType> = ({\n    isLike = false,\n    className = '',\n    width = '20',\n    height = '17',\n    viewBox = '0 0 20 17',\n    fill = '#FF6767',\n}) => (\n    <SvgIcon className={className} viewBox={viewBox} width={width} height={height}>\n        {isLike ? (\n            <path\n                fill={fill}\n                d=\"M18.413 1.664C17.378.59 15.957 0 14.413 0a5.183 5.183 0 00-3.143 1.036c-.47.347-.895.772-1.27 1.268-.375-.496-.8-.92-1.27-1.268A5.182 5.182 0 005.586 0c-1.544 0-2.965.59-4 1.664C.563 2.724 0 4.172 0 5.743c0 1.616.63 3.095 1.984 4.655 1.21 1.396 2.95 2.812 4.965 4.453.688.56 1.468 1.195 2.278 1.871.214.18.488.278.773.278.285 0 .56-.099.773-.277.81-.677 1.59-1.312 2.278-1.873 2.015-1.64 3.755-3.056 4.966-4.452C19.37 8.838 20 7.358 20 5.742c0-1.57-.564-3.018-1.587-4.078z\"\n            />\n        ) : (\n            <>\n                <path\n                    fill={fill}\n                    d=\"M10 17c-.285 0-.56-.099-.773-.278-.808-.675-1.587-1.309-2.274-1.868l-.004-.003c-2.015-1.64-3.755-3.058-4.965-4.453C.63 8.838 0 7.358 0 5.743c0-1.57.564-3.02 1.587-4.08C2.622.592 4.043 0 5.587 0 6.742 0 7.8.349 8.73 1.036c.47.347.895.772 1.27 1.268.375-.496.8-.92 1.27-1.268A5.182 5.182 0 0114.414 0c1.544 0 2.965.59 4 1.664C19.438 2.724 20 4.172 20 5.743c0 1.616-.63 3.095-1.983 4.655-1.211 1.396-2.95 2.812-4.965 4.452-.689.56-1.47 1.196-2.279 1.873A1.206 1.206 0 0110 17zM5.587 1.12c-1.213 0-2.328.462-3.14 1.302-.822.853-1.276 2.032-1.276 3.32 0 1.36.53 2.575 1.715 3.942 1.145 1.32 2.85 2.708 4.823 4.315l.004.003c.69.561 1.471 1.198 2.285 1.878.82-.681 1.602-1.319 2.294-1.881 1.973-1.607 3.677-2.994 4.823-4.315 1.185-1.367 1.714-2.582 1.714-3.941 0-1.289-.454-2.468-1.277-3.32-.81-.841-1.926-1.304-3.139-1.304-.889 0-1.705.27-2.426.803-.642.474-1.09 1.074-1.352 1.494a.741.741 0 01-.635.345.741.741 0 01-.635-.345c-.262-.42-.71-1.02-1.352-1.494a4.002 4.002 0 00-2.426-.803z\"\n                />\n            </>\n        )}\n    </SvgIcon>\n);\n\nexport default LikeIcon;\n","const toDate = (date: string) => {\n    const newDate = new Date(date);\n    const month = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ];\n\n    return `${newDate.getDate()} ${month[newDate.getMonth()]} ${newDate.getFullYear()} `;\n};\n\nexport default toDate;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { LikeIcon } from '../Svg';\n\nimport toDate from '../../../helpers/toDate';\nimport { likedJokeAction, unlikedJokeAction } from '../../../store/actions';\n\ntype CardPropsType = {\n    categories: [];\n    created_at: string;\n    icon_url: string;\n    id: string;\n    updated_at: string;\n    url: string;\n    value: string;\n    liked: boolean;\n    className?: string;\n};\n\nconst Card: React.FC<CardPropsType> = ({ url, id, value, icon_url, updated_at, categories, liked, className }) => {\n    const dispatch = useDispatch();\n\n    const handleOnClick = (jokeId: string): void => {\n        if (liked) {\n            dispatch(unlikedJokeAction(jokeId));\n        } else {\n            dispatch(likedJokeAction(jokeId));\n        }\n    };\n\n    return (\n        <div className={`card ${className}`}>\n            <header className=\"card__header\">\n                <button\n                    className=\"card__button\"\n                    onClick={() => {\n                        handleOnClick(id);\n                    }}\n                >\n                    <LikeIcon isLike={liked} />\n                </button>\n            </header>\n            <div className=\"card__body\">\n                <figure className=\"card__icon-wrap\">\n                    <img className=\"card__icon\" src={icon_url} alt=\"icon\" />\n                </figure>\n                <div className=\"card__content-wrap\">\n                    <p className=\"card__link-wrap\">\n                        ID:\n                        <a href={url} className=\"card__link\" rel=\"noreferrer\" target=\"_blank\">\n                            {id}\n                        </a>\n                    </p>\n                    <p className=\"card__content\">{value}</p>\n                    <footer className=\"card__footer\">\n                        <p className=\"card__date\">Last update: {toDate(updated_at)}</p>\n                        <div className=\"card__category-wrap\">\n                            {!!categories.length && (\n                                <>\n                                    {categories.map(item => (\n                                        <p className=\"card__category\">{item}</p>\n                                    ))}\n                                </>\n                            )}\n                        </div>\n                    </footer>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n","import { ACTIVE_TYPE } from '../reducers/consts';\n\nexport const likedJokeAction = (jokeId: string) => ({ type: ACTIVE_TYPE.LIKED, jokeId });\nexport const unlikedJokeAction = (jokeId: string) => ({ type: ACTIVE_TYPE.UNLIKED, jokeId });\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { CategoryList, Card } from '../common/components';\nimport { JokeTypes, StateTypes } from '../types';\n\nconst IndexPage: React.FC = () => {\n    const jokes = useSelector((state: StateTypes) => state.jokes);\n\n    return (\n        <div className=\"page\">\n            <div className=\"page__wrap\">\n                <h1 className=\"page__title\">Hey!</h1>\n                <h3 className=\"page__subtitle\">Let’s try to find a joke for you:</h3>\n                <CategoryList />\n                {!!jokes.data.length &&\n                    jokes.data.map(\n                        ({\n                            categories,\n                            created_at,\n                            icon_url,\n                            id,\n                            updated_at,\n                            url,\n                            value,\n                            liked = false,\n                        }: JokeTypes) => (\n                            <Card\n                                key={id}\n                                id={id}\n                                value={value}\n                                categories={categories}\n                                created_at={created_at}\n                                icon_url={icon_url}\n                                updated_at={updated_at}\n                                url={url}\n                                liked={liked}\n                            />\n                        ),\n                    )}\n            </div>\n            {!!jokes.favoriteList.length && (\n                <div className=\"page__wrap page__wrap--small\">\n                    <h3 className=\"page__subtitle page__subtitle--grey\">Favorite</h3>\n                    {jokes.favoriteList.map(\n                        ({ categories, created_at, icon_url, id, updated_at, url, value }: JokeTypes) => (\n                            <Card\n                                key={id}\n                                id={id}\n                                value={value}\n                                categories={categories}\n                                created_at={created_at}\n                                icon_url={icon_url}\n                                updated_at={updated_at}\n                                url={url}\n                                liked\n                                className=\"card--favorite\"\n                            />\n                        ),\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default IndexPage;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport IndexPage from './pages';\n\nimport './App.sass';\n\nconst App: React.FunctionComponent = () => (\n    <div className=\"App\">\n        <BrowserRouter>\n            <IndexPage />\n        </BrowserRouter>\n    </div>\n);\n\nexport default App;\n","import { ACTIVE_TYPE } from '../consts';\nimport { jokeActionType, jokeType } from '../types';\nimport { JokeTypes } from '../../../types';\n\nconst jokesReducer = (\n    jokes: jokeType = { data: [], favoriteList: [], typeJoke: 'RANDOM', categories: [], jokeCategory: '', value: '' },\n    action: jokeActionType,\n) => {\n    switch (action.type) {\n        case ACTIVE_TYPE.SET_TYPE:\n            return { ...jokes, typeJoke: action.typeJoke };\n        case ACTIVE_TYPE.SET_CATEGORIES:\n            return { ...jokes, categories: action.categories };\n        case ACTIVE_TYPE.SET_JOKE_CATEGORY:\n            return { ...jokes, jokeCategory: action.jokeCategory };\n        case ACTIVE_TYPE.SET_VALUE:\n            return { ...jokes, value: action.value };\n        case ACTIVE_TYPE.ADD_JOKE:\n            return { ...jokes, data: [action.data] };\n        case ACTIVE_TYPE.ADD_JOKES:\n            return { ...jokes, data: action.data };\n        case ACTIVE_TYPE.LIKED:\n            return {\n                ...jokes,\n                data: jokes.data.map((u: JokeTypes) => {\n                    if (u.id === action.jokeId) {\n                        return { ...u, liked: true };\n                    }\n                    return u;\n                }),\n                favoriteList: [...jokes.favoriteList, jokes.data.find(x => x.id === action.jokeId)],\n            };\n        case ACTIVE_TYPE.UNLIKED:\n            return {\n                ...jokes,\n                data: jokes.data.map((u: any) => {\n                    if (u.id === action.jokeId) {\n                        return { ...u, liked: false };\n                    }\n                    return u;\n                }),\n                favoriteList: jokes.favoriteList.filter(item => item.id !== action.jokeId),\n            };\n        default:\n            return jokes;\n    }\n};\n\nexport default jokesReducer;\n","import { combineReducers, createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { jokesReducer } from './reducers';\n\nconst reducers = combineReducers({\n    jokes: jokesReducer,\n});\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport const store = createStore(persistedReducer);\n// @ts-ignore\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { persistor, store } from './store/reducer';\n\nimport { Loading } from './common/components';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate loading={<Loading />} persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}